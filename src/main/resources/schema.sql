-- create table users
create table if not exists users
(
    user_id   INT generated by default as identity primary key,
    user_name VARCHAR(100) not null,
    login     VARCHAR(50) not null,
    email     VARCHAR(200) not null,
    birthday  DATE not null,
    constraint CHECK_BIRTHDAY
        check (birthday < NOW()),
    constraint CHECK_EMAIL
        check (email LIKE '%@%.%'),
    constraint CHECK_LOGIN
        check (login <> '')
);

-- create table friends
create table if not exists friends
(
    user_id   INT references users(user_id),
    friend_id INT references users(user_id),
    primary key (user_id, friend_id)
);

-- create table mpa
create table if not exists mpa
(
    mpa_id   INT generated by default as identity primary key,
    mpa_name VARCHAR(5) not null
);

-- create table films
create table if not exists films
(
    film_id      INT generated by default as identity primary key,
    film_name    VARCHAR(100) not null,
    description  VARCHAR(200) not null,
    release_date DATE not null,
    duration     INT not null,
    mpa_id       INT references MPA(mpa_id),
    constraint CHECK_DURATION
        check (duration > 0),
    constraint CHECK_NAME
        check (film_name <> ''),
    constraint CHECK_RELEASE_DATE
        check (release_date > DATE '1895-12-28')
);

-- create table genres
create table if not exists genres
(
    genre_id   INT generated by default as identity primary key,
    genre_name VARCHAR(14) not null
);

-- create table films_genres
create table if not exists films_genres
(
    film_id  INT references films(film_id),
    genre_id INT references genres(genre_id),
    primary key (film_id, genre_id)
);

-- create table likes
create table if not exists likes
(
    film_id INT references films(film_id),
    user_id INT references users(user_id),
    primary key (film_id, user_id)
);
